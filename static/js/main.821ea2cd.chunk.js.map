{"version":3,"sources":["components/context/Context.js","services/Service.js","components/errorIndicator/errorIndicator.js","components/ErrorBoundary/ErrorBoundary.js","actions/actionTypes.js","reducers/UpdateShopingCart.js","reducers/UpdateItems.js","reducers/rootReducer.js","store.js","components/pages/CartPage.js","components/singleItem/SingeItem.js","actions/actionUpdateShopingCart.js","components/singleItem/SingleItemContainer.jsx","components/spiner/Spiner.js","components/itemsList/ItemsList.js","components/itemsList/ItemListContainer.jsx","actions/actionUpdateItemList.js","components/ShopingList/ShopingList.js","components/ShopingList/ShopingListContainer.jsx","components/pages/HomePage.js","components/Header/Header.js","components/Header/HeaderContainer.jsx","components/pages/CartPageContainer.jsx","components/app/App.js","index.js"],"names":["Context","React","createContext","Service","fetchItem","a","fetch","response","json","id","item","type","price","errorIndicator","ErrorBoundary","state","hasError","this","setState","props","children","Component","ADD_CART","DECREASE_COUNT_ITEM","REMOVE_ITEM_FROM_CART","EMPTY_CART","ITEMS_REQUESTED","ITEMS_LOADED","ITEMS_ERROR","initialState","cartItems","totalPrice","totalCartCount","UpdateShopingCart","action","itemForAdd","payload","existed_item","find","i","cartCount","priceInCart","exalted","toFixed","otherItems","filter","ind","findIndex","newDecreaseItem","newCartItems","slice","remove","priceAfterDel","cartCountAfterDel","updateItemList","undefined","items","loading","error","console","log","rootReducer","combineReducers","UpdateItems","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","CartPage","decreaseCountItemInCart","addToCart","removeItemFromCart","renderRow","useCallback","name","icon","category","className","src","alt","onClick","renderTotalBoard","scope","map","length","memo","SingeItem","Fragment","to","cartItem","SingleItemContainer","dispatch","useDispatch","AddToCart","Spiner","role","ItemsList","ItemListContainer","useSelector","FetchData","data","newItems","splice","useEffect","canceled","ShopingList","tableRender","ShopingListContainer","DecreaseCountItemInCart","RemoveItemFromCart","HomePage","Header","emptyCart","HeaderContainer","EmptyCart","CartPageContainer","App","path","exact","component","render","service","ReactDOM","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.821ea2cd.chunk.js","sourcesContent":["import React from 'react';\nconst Context = React.createContext();\nexport default Context;","class Service {\n  getData() {\n    return [\n      { id: 1, item: `Tabula Rasa`, type: `Body Armour`, price: 100 },\n      { id: 2, item: `Solaris Lorica`, type: `Body Armour`, price: 34 },\n      { id: 3, item: `Stormcharger`, type: `Boots`, price: 1000 },\n      { id: 4, item: `Ezomyte Hold`, type: `Helmets`, price: 12 },\n      { id: 5, item: `Hold`, type: `Boots`, price: 129 },\n    ];\n  }\n  fetchItem = async () => {\n    const response = await fetch(\n      `https://api.poe.watch/get?category=weapon&league=Standard`\n    );\n    const json = await response.json();\n    return json;\n  };\n}\nexport default Service;\n\n/*\nhttps://cors-anywhere.herokuapp.com/\n\npoe api \nhttps://pathofexile.gamepedia.com/Path_of_Exile_Wiki:Data_query_API\nhttps://pathofexile.gamepedia.com/Template:Item\n\nhttps://api.poe.watch/get?category=weapon&league=Standard\n\nhttps://pathofexile.gamepedia.com/api.php?\naction=cargoquery&\ntables=items&\nfields=class_id,name,rarity,tags,inventory_icon,required_strength&\nwhere=rarity=%22Normal%22%20AND%20\nclass=%22Body Armours%22&\nlimit=5&\ngroup_by=name\n*/\n","import React from 'react';\n\nfunction errorIndicator(props) {\n    return (\n        <div>\n            error\n        </div>\n    );\n}\n\nexport default errorIndicator;","import React, { Component } from 'react';\nimport errorIndicator from '../errorIndicator/errorIndicator';\n\nclass ErrorBoundary extends Component {\n    state = {\n        hasError: false\n    };\n    componentDidCatch(){\n        this.setState({hasError:true});\n    }\n    render() {\n        if(this.state.hasError){\n            return <errorIndicator/>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export const ADD_CART = `ADD_CART`;\nexport const DECREASE_COUNT_ITEM = `DECREASE_COUNT_ITEM`;\nexport const REMOVE_ITEM_FROM_CART = `REMOVE_ITEM_FROM_CART`;\nexport const EMPTY_CART = `EMPTY_CART`;\n\n//////////\nexport const ITEMS_REQUESTED = `ITEMS_REQUESTED`;\nexport const ITEMS_LOADED = `ITEMS_LOADED`;\nexport const ITEMS_ERROR = `ITEMS_ERROR`;\n\n","import remove from \"lodash/remove\";\n\nimport {\n  ADD_CART,\n  DECREASE_COUNT_ITEM,\n  REMOVE_ITEM_FROM_CART,\n  EMPTY_CART,\n} from \"../actions/actionTypes\";\nlet initialState = {\n  cartItems: [],\n  totalPrice: 0,\n  totalCartCount: 0,\n};\nconst UpdateShopingCart = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CART:\n      let itemForAdd = { ...action.payload };\n      let existed_item = state.cartItems.find((i) => itemForAdd.id === i.id);\n      if (!existed_item) {\n        itemForAdd.cartCount = 1;\n        itemForAdd.priceInCart = itemForAdd.exalted;\n        itemForAdd.priceInCart = +itemForAdd.priceInCart.toFixed(2);\n        return {\n          ...state,\n          cartItems: [...state.cartItems, itemForAdd],\n          totalPrice: +(itemForAdd.exalted + state.totalPrice).toFixed(2),\n          totalCartCount: state.totalCartCount + 1,\n        };\n      } else {\n        existed_item.cartCount += 1;\n        existed_item.priceInCart += itemForAdd.exalted;\n        existed_item.priceInCart = +existed_item.priceInCart.toFixed(2);\n        return {\n          ...state,\n          totalPrice: +(state.totalPrice + itemForAdd.exalted).toFixed(2),\n          totalCartCount: state.totalCartCount + 1,\n        };\n      }\n    case DECREASE_COUNT_ITEM:\n      let otherItems = state.cartItems.filter(\n        (i) => action.payload.id !== i.id\n      );\n      let ind = state.cartItems.findIndex((i) => action.payload.id === i.id);\n      if (state.cartItems[ind].cartCount > 1) {\n        const newDecreaseItem = {\n          ...action.payload,\n          cartCount: action.payload.cartCount - 1,\n          priceInCart: +(\n            action.payload.priceInCart - action.payload.exalted\n          ).toFixed(2),\n        };\n        return {\n          ...state,\n          cartItems: [...otherItems, newDecreaseItem],\n          totalPrice: +(state.totalPrice - action.payload.exalted).toFixed(2),\n          totalCartCount: state.totalCartCount - 1,\n        };\n      } else {\n        return {\n          cartItems: otherItems,\n          totalPrice: +(state.totalPrice - action.payload.exalted).toFixed(2),\n          totalCartCount: state.totalCartCount - 1,\n        };\n      }\n    case REMOVE_ITEM_FROM_CART:\n      let newCartItems = state.cartItems.slice();\n      remove(newCartItems, function (item) {\n        return item.id === action.payload.id;\n      });\n      let priceAfterDel = state.totalPrice - action.payload.priceInCart;\n      let cartCountAfterDel = state.totalCartCount - action.payload.cartCount;\n      action.payload.exalted = 0;\n      action.payload.cartCount = 0;\n      return {\n        ...state,\n        cartItems: newCartItems,\n        totalPrice: +priceAfterDel.toFixed(2),\n        totalCartCount: cartCountAfterDel,\n      };\n    case EMPTY_CART:\n      return {\n        ...state,\n        cartItems: [],\n        totalPrice: 0,\n        totalCartCount: 0,\n      };\n    default:\n      return state;\n  }\n};\nexport default UpdateShopingCart;\n","import {\n  ITEMS_REQUESTED,\n  ITEMS_LOADED,\n  ITEMS_ERROR\n}  from '../actions/actionTypes';\n\nconst updateItemList = (state, action) => {\n    if (state === undefined) {\n      return {\n        items: [],\n        loading: true,\n        error: null,\n      };\n    }\n    switch (action.type) {\n      case ITEMS_REQUESTED:\n        return {\n          items: [],\n          loading: true,\n          error: null,\n        };\n      case ITEMS_LOADED:\n        return {\n          items: action.payload,\n          loading: false,\n          error: null,\n        };\n      case ITEMS_ERROR:\n        return {\n          items: [],\n          loading: false,\n          error: action.payload,\n        };\n        case `DONE`:\n          console.log(`done`)\n        return {\n          ...state\n        };\n      default:\n        return state;\n    }\n  };\n  export default updateItemList;","import { combineReducers } from \"redux\";\nimport UpdateShopingCart from \"./UpdateShopingCart\";\nimport UpdateItems from \"./UpdateItems\";\n\nconst rootReducer = combineReducers({\n    UpdateShopingCart,\n    UpdateItems\n\n});\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst store = new createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n\n\nexport default store;\n","import React from \"react\";\n\nfunction CartPage(props) {\n  const {\n    totalPrice,\n    cartItems,\n    decreaseCountItemInCart,\n    removeItemFromCart,\n    addToCart,\n    totalCartCount,\n  } = props;\n  const renderRow = React.useCallback((items, id) => {\n    const { name, priceInCart, cartCount, icon, category } = items;\n    return (\n      <div className=\"card\">\n        <div className=\"cart-img-container\">\n          <img className=\"card-img-top\" src={icon} alt=\"Card image cap\"></img>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\"> {name}</h5>\n          <p className=\"card-text\">{category}</p>\n          <button\n            className=\"fas fa-angle-left\"\n            onClick={() => decreaseCountItemInCart(items)}\n          ></button>\n          <span className=\"cart-item-count\">{cartCount}</span>\n          <button\n            className=\"fas fa-angle-right\"\n            onClick={() => addToCart(items)}\n          ></button>\n        </div>\n      </div>\n    );\n  },[decreaseCountItemInCart,addToCart]);\n  const renderTotalBoard = React.useCallback(() => {\n    return (\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">Items in cart</th>\n            <th scope=\"col\">Total price</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr key={totalCartCount}>\n            <td>\n              <span>{totalCartCount}</span>\n            </td>\n            <td key={totalPrice}>\n              <span>{totalPrice}ex</span>\n            </td>\n          </tr>\n          <tr>\n            <td></td>\n            <td>\n              <button type=\"button\" className=\"btn btn-dark\">\n                ORDER\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  },[totalCartCount,totalPrice]);\n  return (\n    <div className=\"home-page\">\n      <div className=\"cart-container\">\n        <div className=\"cards-container\">\n          {cartItems ? cartItems.map(renderRow) : null}\n        </div>\n        <div className=\"total-info-container\">\n          {cartItems.length > 0 ? (\n            renderTotalBoard()\n          ) : (\n            <span>Cart is empty</span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(CartPage);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SingeItem = React.memo(function SingeItem(props) {\n  const { item, addToCart } = props;\n  return (\n    <React.Fragment>\n      <NavLink to=\"#\">{item.name}</NavLink>\n      <div className=\"img-container\">\n        <img src={item.icon} alt={item.name}></img>\n      </div>\n      <p>Price:{item.exalted}</p>\n      <button\n        className={`btn btn-primary add-cart`}\n        onClick={() => addToCart(item)}\n      >\n        Add in cart\n      </button>\n    </React.Fragment>\n  );\n})\n\nexport default SingeItem;\n","import {\n    ADD_CART,\n    INCREASE_COUNT_ITEM,\n    DECREASE_COUNT_ITEM,\n    REMOVE_ITEM_FROM_CART,\n    EMPTY_CART\n}  from './actionTypes';\n\nexport const addToCart = (cartItem)=>{\n    return{\n        type: ADD_CART,\n        payload:cartItem\n    };\n};\nexport const decreaseCountItemInCart = (cartItem)=>{\n    return{\n        type:DECREASE_COUNT_ITEM,\n        payload:cartItem\n    };\n};\nexport const removeItemFromCart = (cartItem)=>{\n    return{\n        type: REMOVE_ITEM_FROM_CART,\n        payload:cartItem\n    };\n};\nexport const emptyCart = (cartItem)=>{\n    return{\n        type: EMPTY_CART,\n    };\n};\n\n","import React, { useCallback } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport SingeItem from \"./SingeItem\";\nimport { addToCart } from \"../../actions/actionUpdateShopingCart\";\n\nconst SingleItemContainer = React.memo(function SingleItemContainer(props) {\n  const { item } = props;\n  const dispatch = useDispatch();\n  const AddToCart = useCallback((i) => dispatch(addToCart(item)), [\n    dispatch,\n    item,\n  ]);\n  return <SingeItem item={item} addToCart={AddToCart} />;\n});\nexport default SingleItemContainer;\n\n// function SingleItemContainer(props) {\n//   const { item, addToCart } = props;\n//   return <SingeItem item={item} addToCart={addToCart} />;\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     totalPrice: state.UpdateShopingCart.totalPrice,\n//     cartItems: state.UpdateShopingCart.cartItems,\n//   };\n// };\n// const mapDispatchToProps = {\n//   addToCart,\n// };\n\n// export default  connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(React.memo(SingleItemContainer));\n","import React from \"react\";\n\nfunction Spiner(props) {\n  return (\n    <div className=\"spinner-border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n\nexport default Spiner;\n","import React from \"react\";\n\nimport SingleItemContainer from \"../singleItem/SingleItemContainer\";\n\nimport Spiner from \"../spiner/Spiner\";\n\nfunction ItemsList(props) {\n  const { items, loading, error } = props;\n  if (loading) {\n    return <Spiner />;\n  }\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <i className=\"fas fa-exclamation-triangle\"></i>\n      </div>\n    );\n  }\n  return (\n    <ul className=\"item-list\">\n      {items.map((item) => {\n        return (\n          <li key={item.id} className=\"item\">\n            <SingleItemContainer item={item} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default React.memo(ItemsList);\n","import React, { useCallback } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport ItemsList from \"./ItemsList\";\nimport Spiner from \"../spiner/Spiner\";\n\n\nimport { fetchData } from \"../../actions/actionUpdateItemList\";\n\n///with hooks\nfunction ItemListContainer() {\n  const dispatch = useDispatch();\n  const items = useSelector((state) => state.UpdateItems.items);\n  const loading = useSelector((state) => state.UpdateItems.loading);\n  const error = useSelector((state) => state.UpdateItems.error);\n  const FetchData = useCallback((i) => dispatch(fetchData(i)), [dispatch]);\n  React.useEffect(() => {\n    let canceled = false;\n    !canceled && FetchData();\n    return () => {\n      canceled = true;\n    };\n  }, []);\n  return (\n    <ItemsList\n      items={items}\n      loading={loading}\n      error={error}\n    />\n  );\n}\nexport default React.memo(ItemListContainer);\n\n\n// ///without hooks\n// function ItemListContainer(props) {\n//   const { items, loading, error, dispatch } = props;\n// React.useEffect(() => {\n//   let canceled = false;\n//   !canceled && fetchData();\n//   return () => {\n//     canceled = true;\n//   };\n// }, []);\n//   return (\n//     <ItemsList\n//       items={items}\n//       loading={loading}\n//       error={error}\n//     />\n//   );\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     items: state.UpdateItems.items,\n//     loading: state.UpdateItems.loading,\n//     error: state.UpdateItems.error,\n//   };\n// };\n// // const mapDispatchToProps = {\n// //   fetchData,\n// // };\n// /////OR with fetchData return async (dispatch)\n// function mapDispatchToProps(dispatch) {\n//   return bindActionCreators(fetchData, dispatch);\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(ItemListContainer);\n","import { ITEMS_REQUESTED, ITEMS_LOADED, ITEMS_ERROR } from \"./actionTypes\";\nimport store from \"../store\";\n\nimport Service from \"../services/Service\";\n\nexport const itemsLoaded = (newItems) => {\n  return {\n    type: ITEMS_LOADED,\n    payload: newItems,\n  };\n};\n\nexport const itemRequested = () => {\n  return {\n    type: ITEMS_REQUESTED,\n  };\n};\n\nexport const itemsError = (error) => {\n  return {\n    type: ITEMS_ERROR,\n    payload: error,\n  };\n};\n\n/*\n        WORK WITH out `thunk`\nthis two methods get data from API \nfetchData: gets the data himself\nasyncFetch: gets data from Service\n*/\n\n///////// himself\n// export const fetchData = async () => {\n//   const { dispatch } = store;\n//   dispatch(itemRequested());\n//   try {\n//     const res = await fetch(\n//       `https://api.poe.watch/get?category=weapon&league=Standard`\n//     );\n//     const json = await res.json();\n//     return dispatch(itemsLoaded(json.splice(0, 12)));\n//   } catch (error) {\n//     dispatch(itemsError(error));\n//   }\n// };\n\n///////// with Service\n// export const fetchData = async () => {\n//   const { dispatch } = store;\n//   try {\n//     const service = new Service();\n//     dispatch(itemRequested());\n//     const data = await service.fetchItem();\n//     dispatch(itemsLoaded(data.splice(0, 12)));\n//   } catch (error) {\n//     dispatch(itemsError(error));\n//   }\n// };\n\n/*\n        WORK WITH `thunk`\nthis method get data from API \n!change:\n1) in ItemListContainer\n  - change mapDispatchToProps, add bindActionCreators;\n  - put props dispatch = {dispatch} in ItemsList;\n2) in itemList\n  -get dispatch to props;\n  -dispatch(fetchData());\n*/\n\nexport const fetchData = () => async (dispatch) => {\n  try {\n    const service = new Service();\n    dispatch(itemRequested());\n    const data = await fetch(\n      `https://api.poe.watch/get?category=weapon&league=Standard`\n    );\n    const json = await data.json();\n    dispatch(itemsLoaded(json.splice(0, 12)));\n  } catch (error) {\n    dispatch(itemsError(error));\n  }\n};\n","import React from \"react\";\n\nconst ShopingList = React.memo(function ShopingList(props) {\n  const {\n    totalPrice,\n    decreaseCountItemInCart,\n    removeItemFromCart,\n    cartItems,\n    addToCart,\n  } = props;\n  const renderRow = React.useCallback((items, id) => {\n    const { name, priceInCart, cartCount } = items;\n    if (cartCount) {\n      return (\n        <tr key={id}>\n          <th scope=\"row\">{id + 1}</th>\n          <td>{name}</td>\n          <td>{cartCount}</td>\n          <td>{priceInCart}ex</td>\n          <td className=\"shop-list-btn\">\n            <button\n              className=\"fas fa-plus btn btn-outline-primary\"\n              onClick={() => addToCart(items)}\n            ></button>\n            <button\n              className=\"fas fa-minus btn btn-outline-warning\"\n              onClick={() => decreaseCountItemInCart(items)}\n            ></button>\n            <button\n              className=\"fas fa-trash-alt btn btn-outline-danger\"\n              onClick={() => removeItemFromCart(items)}\n            ></button>\n          </td>\n        </tr>\n      );\n    }\n  }, [addToCart,decreaseCountItemInCart,removeItemFromCart]);\n  const tableRender = React.useCallback(() => {\n    return (\n      <div className=\"shop-list-container\">\n        <p>Total:{totalPrice}ex</p>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Item</th>\n              <th scope=\"col\">Count</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>{cartItems.map(renderRow)}</tbody>\n        </table>\n      </div>\n    );\n  },[cartItems, renderRow, totalPrice]);\n  return (\n    <React.Fragment>\n      {cartItems.length > 0 ? tableRender() : null}\n    </React.Fragment>\n  );\n})\n\nexport default ShopingList;\n","import React, { useCallback, useMemo } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\n\nimport { bindActionCreators } from \"redux\";\n\nimport {\n  decreaseCountItemInCart,\n  removeItemFromCart,\n} from \"../../actions/actionUpdateShopingCart\";\nimport { addToCart } from \"../../actions/actionUpdateShopingCart\";\n\nimport ShopingList from \"./ShopingList\";\n\n\nfunction ShopingListContainer() {\n  const dispatch = useDispatch();\n  const cartItems = useSelector((state) => state.UpdateShopingCart.cartItems);\n  const totalPrice = useSelector((state) => state.UpdateShopingCart.totalPrice);\n  const AddToCart = useCallback((items) => dispatch(addToCart(items)), [\n    dispatch,\n  ]);\n  const DecreaseCountItemInCart = useCallback(\n    (i) => dispatch(decreaseCountItemInCart(i)),\n    [dispatch]\n  );\n  const RemoveItemFromCart = useCallback(\n    (i) => dispatch(removeItemFromCart(i)),\n    [dispatch]\n  );\n\n  return (\n    <ShopingList\n      cartItems={cartItems}\n      totalPrice={totalPrice}\n      decreaseCountItemInCart={DecreaseCountItemInCart}\n      removeItemFromCart={RemoveItemFromCart}\n      addToCart={AddToCart}\n    />\n  );\n}\nexport default ShopingListContainer;\n\n// function ShopingListContainer(props) {\n//   const {\n//     cartItems,\n//     totalPrice,\n//     decreaseCountItemInCart,\n//     removeItemFromCart,\n//     addToCart,\n//   } = props;\n//   return (\n//     <ShopingList\n//       cartItems={cartItems}\n//       totalPrice={totalPrice}\n//       decreaseCountItemInCart={decreaseCountItemInCart}\n//       removeItemFromCart={removeItemFromCart}\n//       addToCart={addToCart}\n//     />\n//   );\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     cartItems: state.UpdateShopingCart.cartItems,\n//     totalPrice: state.UpdateShopingCart.totalPrice,\n//   };\n// };\n// const mapDispatchToProps = {\n//   decreaseCountItemInCart,\n//   removeItemFromCart,\n//   addToCart,\n\n// };\n\n// // function mapDispatchToProps(dispatch) {\n// //   return bindActionCreators(\n// //     { decreaseCountItemInCart, removeItemFromCart, addToCart },\n// //     dispatch\n// //   );\n// // }\n// export default  connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(React.memo(ShopingListContainer));\n","import React from 'react';\nimport ItemListContainer from \"../itemsList/ItemListContainer\";\nimport ShopingListContainer from \"../ShopingList/ShopingListContainer\";\n\n\nfunction HomePage() {\n    return (\n        <div className = 'home-page'>\n            <ItemListContainer />\n            <ShopingListContainer/>\n        </div>\n    );\n}\n\nexport default HomePage;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header(props) {\n  const { totalCartCount, totalPrice, emptyCart } = props;\n  return (\n    <header className=\"header\">\n      <NavLink to=\"/\">POE-Store</NavLink>\n      <div className=\"cart-container\">\n        {/* <button\n          type=\"button\"\n          className=\"btn btn-outline-danger\"\n          onClick={emptyCart}\n        >\n          Empty cart\n        </button> */}\n        <NavLink to=\"cart\">\n          <i className=\"cart-icon fa fa-shopping-cart\"> </i>\n          <i className=\"cart-item-info cart-total-price\">\n            {totalCartCount?\n              <p className=\"badge badge-light cart-count\">{\n            totalCartCount}</p>:null}\n            {/* /{totalPrice} ex */}\n          </i>\n        </NavLink>\n      </div>\n    </header>\n  );\n}\n\nexport default React.memo(Header);\n","import React, { useCallback } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Header from \"./Header\";\nimport { emptyCart } from \"../../actions/actionUpdateShopingCart\";\n\n\nconst HeaderContainer = () => {\n  const dispatch = useDispatch();\n  const totalCartCount = useSelector(state=>state.UpdateShopingCart.totalCartCount);\n  const totalPrice = useSelector(state=>state.UpdateShopingCart.totalPrice);\n  const EmptyCart = useCallback(() => dispatch(emptyCart()), [dispatch]);\n  return (\n    <React.Fragment>\n      <Header totalCartCount={totalCartCount} totalPrice={totalPrice} emptyCart = {EmptyCart} />\n    </React.Fragment>\n  );\n};\nexport default React.memo(HeaderContainer);\n\n\n// const HeaderContainer = (props) => {\n//   const { totalCartCount, totalPrice, emptyCart } = props;\n//   return (\n//     <React.Fragment>\n//       <Header totalCartCount={totalCartCount} totalPrice={totalPrice} emptyCart = {emptyCart} />\n//     </React.Fragment>\n//   );\n// };\n\n// const mapStateToProps = (state) => {\n//   return {\n//     totalCartCount: state.UpdateShopingCart.totalCartCount,\n//     totalPrice: state.UpdateShopingCart.totalPrice,\n//   };\n// };\n// const mapDispatchToProps = {\n//   emptyCart,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\n","import React, { useCallback } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport CartPage from \"./CartPage\";\nimport {\n  decreaseCountItemInCart,\n  removeItemFromCart,\n  addToCart,\n} from \"../../actions/actionUpdateShopingCart\";\n\nfunction CartPageContainer() {\n  const dispatch = useDispatch();\n  const totalPrice = useSelector((state) => state.UpdateShopingCart.totalPrice);\n  const cartItems = useSelector((state) => state.UpdateShopingCart.cartItems);\n  const totalCartCount = useSelector(\n    (state) => state.UpdateShopingCart.totalCartCount\n  );\n  const DecreaseCountItemInCart = useCallback(\n    (i) => dispatch(decreaseCountItemInCart(i)),\n    [dispatch]\n  );\n  const RemoveItemFromCart = useCallback(\n    (i) => dispatch(removeItemFromCart(i)),\n    [dispatch]\n  );\n  const AddToCart = useCallback((i) => dispatch(addToCart(i)), [dispatch]);\n\n  return (\n    <React.Fragment>\n      <CartPage\n        totalPrice={totalPrice}\n        cartItems={cartItems}\n        decreaseCountItemInCart={DecreaseCountItemInCart}\n        removeItemFromCart={RemoveItemFromCart}\n        addToCart={AddToCart}\n        totalCartCount={totalCartCount}\n      />\n    </React.Fragment>\n  );\n}\nexport default React.memo(CartPageContainer);\n\n// const CartPageContainer = (props) => {\n//   const {\n//     totalPrice,\n//     cartItems,\n//     decreaseCountItemInCart,\n//     removeItemFromCart,\n//     addToCart,\n//     totalCartCount\n//   } = props;\n//   return (\n//     <React.Fragment>\n//       <CartPage\n//         totalPrice={totalPrice}\n//         cartItems={cartItems}\n//         decreaseCountItemInCart={decreaseCountItemInCart}\n//         removeItemFromCart = {removeItemFromCart}\n//         addToCart = {addToCart}\n//         totalCartCount = {totalCartCount}\n//       />\n//     </React.Fragment>\n//   );\n// };\n// const mapStateToProps = (state) => {\n//   return {\n//     totalPrice: state.UpdateShopingCart.totalPrice,\n//     cartItems: state.UpdateShopingCart.cartItems,\n//     totalCartCount:state.UpdateShopingCart.totalCartCount\n//   };\n// };\n// const mapDispatchToProps = {\n//   decreaseCountItemInCart,\n//   removeItemFromCart,\n//   addToCart,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(CartPageContainer);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CartPage from \"../pages/CartPage\";\nimport HomePage from \"../pages/HomePage\";\nimport HeaderContainer from \"../Header/HeaderContainer\";\nimport CartPageContainer from \"../pages/CartPageContainer\";\n\nfunction App() {\n  return (\n    <div className=\"main-container\">\n      <HeaderContainer />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/cart\" exact component={CartPageContainer} />\n        <Route render = {()=><h1>Page not found</h1>} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.scss\";\n\nimport Context from \"./components/context/Context\";\nimport Service from \"./services/Service\";\nimport ErrorBoundary from \"./components/ErrorBoundary/ErrorBoundary\";\nimport store from \"./store\";\n\nimport App from \"./components/app/App\";\n\nconst service = new Service();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <Context.Provider value = {service}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Context.Provider>\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}